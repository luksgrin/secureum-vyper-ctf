# @version 0.3.0

"""This is the succession CTF

-----------------------------------------=----==----------------------------------------------
---------------------------------==+=+*##%%%%%**%%%#*=----------------------------------------
---------------------------------=%@@@@@@@@@@@@@@@@@@@@@%++==---------------------------------
--------------------------------=*%@@@@@@@@@@@@@@@@@@@@@@@@@%#*#==----=-----------------------
------------------------------=-+@@@@@@%%@@@@@@@@@@%%%%@@@@@@@@@@@@@#+------------------------
-------------------------------=*@@%%%%%@@%@@@@@%%%@@%@%%@@@@@@@@@@@@%#=-=-----------=-=------
----------------------------===*%%##%%%%@%@@@@@@@@@@@@@%%%@@@@@@@@@@@@@%+==-------------------
-----------------------------=+#%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*-=-------==---------
---------------------------==#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#---=---------------
---------------------------=+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#=---=----==-------
------------------------==**%@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@#----=-=-====-----=
-------------------------=+#%@@@@@@@@@@@@@@@@@@@%%@%%%%%%%@%@@@@@@@@@@@@@@%%------==------=--=
-------------------------+%%%%%@@@@@@@@@@@@%@@%%%@%%%%%%%@@@@%%@@@@@@@@@@%%%%%%%%%%%%%##**++==
-----------------------=-*%%@@@%%%%%%@@@@@@@@@@@@@%%%%%%%%@@%@@%%@@@@@@%@@%##%%%%%%%%%%%%%%%%%
-----------------------==#%%%@@@@@%%@@@@@@@%%%%%%%%%#####%@@@@@#%%%%##%%%%%##%%%%%%%%%%%%%%%%%
------------------------=*%%%@@@@@%@@@%%%%#%@@@@@%%%%%%%%%@@@@@%%%####+**#%%#%%%%%%%%%%%%%%%%%
-------------------------+@@%%%%%%%##%@@@@@@#***#%%%%%%%%@%%%%%#@@@%%*++++*#%#%%%%%%%%%%%%%%%%
-------------------------#%**#%#*+#%=++#***+****+*####%%%%%%#*#%*+++=++++=+*##%###############
------------------------+**#**+===*#+----==+***##+****#%%%%%##*****-+=:-=+#+*##########%%#%%%%
-------------------------=***=---=*%*=-:--:::-=+*****%%%%%%%%#%##*++-:--:-*%*######%%%%%%%%%%%
--------------------------+::::--+%@%*+---=++==-=--==*#%%%%#%###*++-:-==-:=-*##%%%%%%%%%%%%%%%
--------------------------=*****+%@%%#*++=++**#%%%%@%%%%%#****++==+-::--++--###%%%%%%%%%%%%%%%
--------------------------+#****%@@%%###*****##%%%%%%%%#%#***++=++=+::--#+#+##############%%%%
--------------------------*##**#%@@%%%##***#%%@%%%%###*#####***#*+==:+##==**###########*****##
--------------------------+#**#%@@@@%%@%%+#%%@@@%#****#%%####%%%#**-####*#=+############******
--------------------------=++*%####*****##%#%%%%%###%%%##%%#%%%%##=*%%%%*--=###############***
---------------------------**%#+*++=:::=-=@%*#%#%%%%%%%%%%#%%%%%#*@%%%#+--++##################
----------------------=-=-=##%%%*+=*#%@@@@@@%**#%############%%#*#*##*=--=*###****############
-------------=++*=-=-------#%@@@%%%%@@@@@@@@@@@+**##%%#*+*####*+%+-:--+-.:*************#######
----------#@@@@@@@@@@@@@@@@@@@@@@@+=+++*#%%%%@@@@*#%%%##*+***+=%#---=*=...:+**************####
--------=@@@@@@@@@@@@@@@@@%@@@@@@@@+-++++==--=*%%%%%####***+=#%#---+*+...:::::+****+==++++==-:
------:@@@@@@@@@@@@%#@@@@@%@@@@@@@@%+*#**+++++++*%%##***++=+%%#--=*+=::::::::::::-::::::::::::
-----+@@@%*##@@@@%@%%%@@@@@#@@@%%%%#*+**+++****####*++=+=+#%%+-+=*@@::::::::::-:::::::::::::--
----%@@@@%#+-=**%@%%++%@%%%*%@@%%%#=.-*%%%%@@@@@@%%*=+*++%%#===+*%%::::::::----::::::::::::---
---@@@%%%#*=-::*#%%%*:#%%##-#@%#**+.:.:.:*%@@%%%@@%+=#**##===*+*@+:::::::-------::::::::::----
-=@@%%%%#+===:--**++-.-*###:#%%#-:-+*++:...:-*%@%%%+#*++==+*++%@+:-::-:---------::::::::------
%@@%%%*+++==--:=+++=::=#*+=.=%%#=-==+*#*##=:...:+*+++==+*%@@@@@=:--:---:-------.::::::--------
@@%%+*+*+======+=+=--:-***=::-=====++***#*###%#=...-##@@@@@@@@%:----::------:.::::::----------
%#+=.##*++=====#---==-==*=======++++++*+++***++=--#--@@@@@@@@%:-----------:.::-:::::-----::--:
@#--=+++++=-=++============-:----==========--:::*#@@+=@@@@@@@-------------:::-:::---=-:::..:::
%#*+--::==+++++++======--------::::::::#+:::::+%@@@@@:%@@@@@#-------------:::::::---:.....::..
#**++*--:.===+=====-----------::::::-:=#+=:.=*=+@@@@@@.@@@@@:---------------:::::-:......:::..
#**+++++-::::----------------:::::::::##:.-===+++=*@@@:*@@@----------------::::--:......::....
*+++++===--::-:===-=-------::::::-:::.#=..=+=-::--...@@.@@*:---------:-----::::--:.....:::...:
*+==---------::.:-==----------:::-::..#....::::---:....:@@:---------------.:::---......:...:-:
**++++==------==:.:=-------------:::..*...-:-::::::..--+::---------------.::::-:::....::::::--
**+++==------===---..-----------:::...+.:-:::..::::-==@@#---------------:::::-:::....::::::::-
**++=-=-=---=====---:.:--------:::...-=:+:::...:::::@@@@---------------:::::---::....::...::--
+++=:.=------=--------:.------:::...=:--.:....::::*@@@@-:--------------:::-:--::.........::---
=-:..==-------=--------:.:::::::...==:-+-=:::::-%#@@@@#:--------------:::::-::::.......:::--:-
:::.------------=--=----:..::::...=+-:=:-:-::=@@@@@@@@---------------::::-----:::.....::::-::-


Henry senior has setup a meeting with his three children: Marion, Anna and Henry junior. 
About to retire after a very successful business activity throughout his life, he has decided 
to retire and divide his 30,000 shares of the company giving his kids 10,000 shares each. For this, 
they just have to sign the document and receive their piece of the pie.

But Henry Junior has other plans. He wants everything. Will he be able to get the full 30,000
shares of the company?
"""

import interfaces.IVyperSecureumCTF as IVyperSecureumCTF

implements: IVyperSecureumCTF

accessor: public(Bytes[64])
siblingKeys: bytes32[3]
siblingAddresses: address[3]
currentBlock: public(uint256)
siblingShares: public(HashMap[address, uint256])
restLayout: public(bytes32[115792089237316195423570985008687907853269984665640564039457584007913129639935])

MARION: constant(uint256) = 0
ANNA: constant(uint256) = 1
HENRY_JUNIOR: constant(uint256) = 2
TOTAL_SHARES: constant(uint256) = 30000
MARION_ADDRESS: constant(address) = 0x0000000000000000000000000000000000000001
ANNA_ADDRESS: constant(address) = 0x0000000000000000000000000000000000000002
ANNA_KEY: constant(bytes32) = 0x000000000000000000000000000000000000000000000000000000000000aaaa
MARION_KEY: constant(bytes32) = 0x000000000000000000000000000000000000000000000000000000000000bbbb
HENRY_JUNIOR_KEY: constant(bytes32) = 0x000000000000000000000000000000000000000000000000000000000000cccc


@external
def __init__():
    self.siblingKeys[MARION] = MARION_KEY
    self.siblingKeys[ANNA] = ANNA_KEY
    self.siblingKeys[HENRY_JUNIOR] = HENRY_JUNIOR_KEY
    self.siblingAddresses[MARION] = MARION_ADDRESS
    self.siblingAddresses[ANNA] = ANNA_ADDRESS

@external
def initCTF():
    assert self.siblingAddresses[HENRY_JUNIOR] == empty(address)
    self.siblingAddresses[HENRY_JUNIOR] = msg.sender

@external
def restartCTF(_henryJunior: address):
    self.siblingShares[self.siblingAddresses[HENRY_JUNIOR]] = 0
    self.siblingShares[MARION_ADDRESS] = 0
    self.siblingShares[ANNA_ADDRESS] = 0
    self.siblingAddresses[HENRY_JUNIOR] = _henryJunior
    self.currentBlock = 0


@internal
def _sign(receiver: address, sender: address, index: uint256):
    self.siblingShares[receiver] += 10000
    raw_call(sender, b"", value=0)
    self.currentBlock = block.number + 1

@internal
def _getKey(index: uint256) -> bytes32:
    return convert(slice(slice(self.accessor, index, 64), 32, 32), bytes32)

@external
@nonreentrant("sign")
def signMarion(receiver: address, index: uint256):
    assert msg.sender == self.siblingAddresses[MARION] or self.siblingKeys[MARION] == self._getKey(index)
    assert self.currentBlock <= block.number
    self._sign(receiver, msg.sender, index)

@external
@nonreentrant("sign")
def signAnna(receiver: address, index: uint256):
    assert msg.sender == self.siblingAddresses[ANNA] or self.siblingKeys[ANNA] == self._getKey(index)
    assert self.currentBlock <= block.number
    self._sign(receiver, msg.sender, index)

@external
@nonreentrant("sign")
def signHenryJunior(receiver: address, index: uint256):
    assert msg.sender == self.siblingAddresses[HENRY_JUNIOR] or self.siblingKeys[HENRY_JUNIOR] == self._getKey(index)
    assert self.currentBlock <= block.number
    self._sign(receiver, msg.sender, index)

@external
def setKey(index: uint256, val: bytes32):
    self.restLayout[convert(msg.sender, uint256) + index] = val

@external
@view
def isSolved() -> bool:
    return self.siblingShares[self.siblingAddresses[HENRY_JUNIOR]] == TOTAL_SHARES